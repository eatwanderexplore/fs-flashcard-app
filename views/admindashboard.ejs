<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('partials/header1.ejs') %>
</head>

<body>
    <%- include('partials/adminnavbar.ejs') %>
        <!-- add new Student modal -->
        <div class="m-4">
            <!-- Modal toggle -->
            <button id="new-flashcard-btn" data-modal-target="crud-modal" data-modal-toggle="crud-modal"
                class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center m-4 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                type="button">
                Create New User
            </button>

            <!-- Main modal -->
            <div id="crud-modal" tabindex="-1" aria-hidden="true"
                class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
                <div class="relative p-4 w-full max-w-md max-h-full">
                    <!-- Modal content -->
                    <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                        <!-- Modal header -->
                        <div
                            class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                                Add a student
                            </h3>
                            <button type="button"
                                class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                                data-modal-toggle="crud-modal">
                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                                    viewBox="0 0 14 14">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                        stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                </svg>
                                <span class="sr-only">Close modal</span>
                            </button>
                        </div>
                        <!-- Modal body -->
                        <form class="space-y-4 md:space-y-6" action="/addUser" method="post">
                            <div>
                                <label for="username"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
                                <input type="text" name="username" id="username"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                    placeholder="username" required>
                            </div>
                            <div>
                                <label for="email"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
                                <input type="email" name="email" id="email"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                    placeholder="email" required>
                            </div>
                            <div>
                                <label for="password"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
                                <input type="password" name="password" id="password" placeholder="••••••••"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                    required>
                            </div>
                            <button type="submit"
                                class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
                                Add Student
                                </button>
                        </form>
                    </div>
                </div>
            </div>

            <h2 class="flex justify-center text-xl m-4">Students who have not logged in this week</h2>

            <!-- Student table view -->
            <div class="relative overflow-x-auto shadow-md sm:rounded-lg m-4">
                <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                        <tr>
                            <th scope="col" class="px-6 py-3">Username</th>
                            <th scope="col" class="px-6 py-3">email</th>
                            <th scope="col" class="px-6 py-3">Last Login</th>
                            <th scope="col" class="px-6 py-3">User Type</th>
                            <th scope="col" class="px-6 py-3">
                                <span class="sr-only">Edit</span>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (userData.length !==0) { %>
                            <% userData.forEach(function(data) { %>
                                <tr
                                    class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
                                    <th scope="row"
                                        class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                        <%= data.username %>
                                    </th>
                                    <td class="px-6 py-4">
                                        <%= data.email %>
                                    </td>
                                    <td class="px-6 py-4">
                                        <%= data.last_login %>
                                    </td>
                                    <td class="px-6 py-4">
                                        <%= data.role %>
                                    </td>
                                    <td class="px-6 py-4">
                                        <button data-modal-target="crud-modal" data-modal-toggle="crud-modal"
                                            data-username="<%= data.username %>" data-email="<%= data.email %>"
                                            data-role="<%= data.role %>" data-userID="<%= data.userID %>" class="edit-user-btn font-medium text-blue-600 dark:text-blue-500
                                        hover:underline" type="button">
                                            Edit <span class="text-white">/</span>
                                        </button>
                                        <button type="button" onclick="confirmDelete('<%= data.userID %>')"
                                            class="text-red-600 hover:text-red-900">
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                                <% }); %>
                                    <% } %>
                    </tbody>
                </table>
            </div>

            <!-- Edit User modal (moved outside the table) -->
            <div id="crud-modal" tabindex="-1" aria-hidden="true"
                class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
                <div class="relative p-4 w-full max-w-md max-h-full">
                    <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                        <div
                            class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Edit User</h3>
                            <button type="button"
                                class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                                data-modal-toggle="crud-modal">
                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                                    viewBox="0 0 14 14">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                        stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                </svg>
                                <span class="sr-only">Close</span>
                            </button>
                        </div>
                        <!-- Modal body -->
                        <form action="/editUser" method="POST" class="p-4 md:p-5">
                            <input type="hidden" name="userID" id="userID">
                            <div class="col-span-2 sm:col-span-1">
                                <label for="username"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Username</label>
                                <input type="text" name="username" id="username"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                                    required>
                            </div>
                            <div class="grid gap-4 mb-4 grid-cols-2">
                                <div class="col-span-2">
                                    <label for="username"
                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Email</label>
                                    <input type="text" name="email" id="email"
                                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                                        required>
                                </div>
                                <div class="col-span-2 sm:col-span-1">
                                    <label for="role"
                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">role</label>
                                    <select id="role" name="role"
                                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                                        required>
                                        <option value="Student">Student</option>
                                        <option value="Admin">Admin</option>
                                    </select>
                                </div>
                            </div>
                            <button type="submit"
                                class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                Edit User
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Delete Confirmation Modal (Moved outside the table) -->
            <div id="delete-modal" tabindex="-1" aria-hidden="true"
                class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
                <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                    <div class="mt-3 text-center">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">Confirm Deletion</h3>
                        <div class="mt-2 px-7 py-3">
                            <p class="text-sm text-gray-500">Are you sure you want to delete this user?</p>
                        </div>
                        <div class="items-center px-4 py-3">
                            <form id="delete-form" action="/deleteUser" method="POST">
                                <input type="hidden" name="userID" id="delete-user-id">
                                <button type="button"
                                    class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md w-24 mr-2"
                                    onclick="closeDeleteModal()">
                                    Cancel
                                </button>
                                <button type="submit"
                                    class="px-4 py-2 bg-red-600 text-white text-base font-medium rounded-md w-24">
                                    Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const newStudentBtn = document.getElementById('new-flashcard-btn');
                    const modal = document.getElementById('crud-modal');
                    const closeButtons = modal.querySelectorAll('[data-modal-toggle="crud-modal"]');
                    const form = modal.querySelector('form');
                    const editButtons = document.querySelectorAll('.edit-user-btn');

                    // Open New Student Modal
                    newStudentBtn.addEventListener('click', function () {
                        // Reset form when opening for a new student
                        form.reset();

                        // Update form action and title for creating
                        form.action = '/addUser';
                        modal.querySelector('h3').textContent = 'Add a student';

                        // Ensure the modal's userID field is cleared
                        const userIDField = form.querySelector('input[name="userID"]');
                        if (userIDField) {
                            userIDField.value = '';
                        }

                        // Show modal
                        modal.classList.remove('hidden');
                        modal.classList.add('flex');
                    });

                    // Edit User Modal Functionality
                    editButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            const username = button.getAttribute('data-username');
                            const email = button.getAttribute('data-email');
                            const role = button.getAttribute('data-role');
                            const userID = button.getAttribute('data-userID');

                            // Update form action and title for editing
                            form.action = '/editUser';
                            modal.querySelector('h3').textContent = 'Edit User';

                            // Populate form fields
                            document.getElementById('username').value = username;
                            document.getElementById('email').value = email;
                            document.getElementById('role').value = role;
                            document.getElementById('userID').value = userID;

                            // Show modal
                            modal.classList.remove('hidden');
                            modal.classList.add('flex');
                        });
                    });

                    // Close modal functionality
                    closeButtons.forEach(closeBtn => {
                        closeBtn.addEventListener('click', function () {
                            modal.classList.add('hidden');
                            modal.classList.remove('flex');
                        });
                    });

                    // Close modal when clicking outside
                    modal.addEventListener('click', function (event) {
                        if (event.target === modal) {
                            modal.classList.add('hidden');
                            modal.classList.remove('flex');
                        }
                    });

                    // Form submission handling
                    form.addEventListener('submit', function (event) {
                        event.preventDefault();

                        // Collect form data
                        const formData = new FormData(form);
                        const userData = {};

                        // Dynamically collect all form fields
                        for (let [key, value] of formData.entries()) {
                            userData[key] = value;
                        }

                        // Determine the action based on form's current action
                        const actionUrl = form.action.includes('addUser') ? '/addUser' : '/editUser';

                        // Send data to server
                        fetch(actionUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(userData)
                        })
                            .then(response => {
                                if (response.ok) {
                                    // Close modal
                                    modal.classList.add('hidden');
                                    modal.classList.remove('flex');

                                    // Refresh page to show updated users
                                    window.location.reload();
                                } else {
                                    // Handle error (you might want to show an error message)
                                    console.error('Failed to submit user');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                    });

                    // Delete functionality (from existing script)
                    window.confirmDelete = function (userID) {
                        const deleteModal = document.getElementById('delete-modal');
                        const deleteUserIdInput = document.getElementById('delete-user-id');

                        if (userID) {
                            deleteUserIdInput.value = userID;
                            deleteModal.classList.remove('hidden');
                        }
                    };

                    window.closeDeleteModal = function () {
                        const deleteModal = document.getElementById('delete-modal');
                        deleteModal.classList.add('hidden');
                    };

                    // Close delete modal when clicking outside
                    const deleteModal = document.getElementById('delete-modal');
                    if (deleteModal) {
                        deleteModal.addEventListener('click', function (event) {
                            if (event.target === this) {
                                closeDeleteModal();
                            }
                        });
                    }

                    // Handle delete form submission
                    const deleteForm = document.getElementById('delete-form');
                    if (deleteForm) {
                        deleteForm.addEventListener('submit', function (event) {
                            event.preventDefault();
                            const userID = document.getElementById('delete-user-id').value;

                            fetch('/deleteUser', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ userID: userID })
                            })
                                .then(response => {
                                    if (response.ok) {
                                        window.location.reload();
                                    } else {
                                        console.error('Delete failed');
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                });
                        });
                    }
                });
            </script>
</body>

</html>